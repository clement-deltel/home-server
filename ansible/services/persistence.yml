- name: Docker Persistence
  hosts: all
  gather_facts: false
  vars:
    directories:
      # Traefik
      - "{{ server_home }}/services/traefik/persistence"
      # Actual
      - "{{ server_home }}/services/finances/actual/persistence"
      # Affine
      - "{{ server_home }}/services/pkms/affine/persistence"
      - "{{ server_home }}/services/pkms/affine/persistence/config"
      - "{{ server_home }}/services/pkms/affine/persistence/storage"
      - "{{ server_home }}/services/pkms/affine/postgres-persistence"
      - "{{ server_home }}/services/pkms/affine/redis-persistence"
      # Bytestash
      - "{{ server_home }}/services/management/code/bytestash/persistence"
      # Detection (changedetection.io)
      - "{{ server_home }}/services/monitoring/detection/persistence"
      # Directus
      - "{{ server_home }}/services/directus/db-persistence"
      - "{{ server_home }}/services/directus/persistence"
      - "{{ server_home }}/services/directus/persistence/extensions"
      - "{{ server_home }}/services/directus/persistence/uploads"
      # Docuseal
      - "{{ server_home }}/services/pdf/docuseal/db-persistence"
      - "{{ server_home }}/services/pdf/docuseal/persistence"
      # Enclosed
      - "{{ server_home }}/services/security/enclosed/persistence"
      - "{{ server_home }}/services/security/enclosed/postgres-persistence"
      # FreshRSS
      - "{{ server_home }}/services/news/freshrss/persistence"
      # GitLab
      - "{{ server_home }}/services/management/code/gitlab/persistence"
      - "{{ server_home }}/services/management/code/gitlab/persistence/config"
      - "{{ server_home }}/services/management/code/gitlab/persistence/logs"
      - "{{ server_home }}/services/management/code/gitlab/persistence/data"
      # Gokapi
      - "{{ server_home }}/services/media/sharing/gokapi/persistence"
      - "{{ server_home }}/services/media/sharing/gokapi/persistence/config"
      - "{{ server_home }}/services/media/sharing/gokapi/persistence/data"
      # Grafana
      - "{{ server_home }}/services/grafana/db-persistence"
      - "{{ server_home }}/services/grafana/influxdb-persistence"
      - "{{ server_home }}/services/grafana/persistence"
      # Grocy
      - "{{ server_home }}/services/inventory/grocy/persistence"
      # Guacamole
      - "{{ server_home }}/services/remote/guacamole/db-persistence"
      - "{{ server_home }}/services/remote/guacamole/guacd-persistence"
      - "{{ server_home }}/services/remote/guacamole/guacd-persistence/drive"
      - "{{ server_home }}/services/remote/guacamole/guacd-persistence/record"
      # Homarr
      - "{{ server_home }}/services/dashboard/homarr/persistence"
      - "{{ server_home }}/services/dashboard/homarr/persistence/configs"
      - "{{ server_home }}/services/dashboard/homarr/persistence/data"
      - "{{ server_home }}/services/dashboard/homarr/persistence/icons"
      # Homebox
      - "{{ server_home }}/services/inventory/homebox/persistence"
      # HortusFox
      - "{{ server_home }}/services/inventory/hortusfox/db-persistence"
      - "{{ server_home }}/services/inventory/hortusfox/persistence"
      - "{{ server_home }}/services/inventory/hortusfox/persistence/backup"
      - "{{ server_home }}/services/inventory/hortusfox/persistence/images"
      - "{{ server_home }}/services/inventory/hortusfox/persistence/logs"
      - "{{ server_home }}/services/inventory/hortusfox/persistence/migrate"
      - "{{ server_home }}/services/inventory/hortusfox/persistence/themes"
      # Immich
      - "{{ server_home }}/services/media/storage/pictures/immich/db-persistence"
      - "{{ server_home }}/services/media/storage/pictures/immich/persistence"
      - "{{ server_home }}/services/media/storage/pictures/immich/persistence/model-cache"
      - "{{ server_home }}/services/media/storage/pictures/immich/persistence/upload"
      # Jellyfin
      - "{{ server_home }}/services/media/storage/videos/jellyfin/persistence"
      - "{{ server_home }}/services/media/storage/videos/jellyfin/persistence/library"
      - "{{ server_home }}/services/media/storage/videos/jellyfin/persistence/movies"
      - "{{ server_home }}/services/media/storage/videos/jellyfin/persistence/tvshows"
      # Jetlog
      - "{{ server_home }}/services/monitoring/jetlog/persistence"
      # Kavita
      - "{{ server_home }}/services/media/storage/books/kavita/persistence"
      - "{{ server_home }}/services/media/storage/books/kavita/persistence/books"
      - "{{ server_home }}/services/media/storage/books/kavita/persistence/comics"
      - "{{ server_home }}/services/media/storage/books/kavita/persistence/config"
      - "{{ server_home }}/services/media/storage/books/kavita/persistence/mangas"
      # Kopia
      - "{{ server_home }}/services/kopia/persistence"
      - "{{ server_home }}/services/kopia/persistence/cache"
      - "{{ server_home }}/services/kopia/persistence/config"
      - "{{ server_home }}/services/kopia/persistence/data"
      - "{{ server_home }}/services/kopia/persistence/logs"
      # Librum
      - "{{ server_home }}/services/media/storage/books/librum/db-persistence"
      - "{{ server_home }}/services/media/storage/books/librum/persistence"
      # Limesurvey
      - "{{ server_home }}/services/limesurvey/db-persistence"
      - "{{ server_home }}/services/limesurvey/persistence"
      - "{{ server_home }}/services/limesurvey/persistence/config"
      - "{{ server_home }}/services/limesurvey/persistence/plugins"
      - "{{ server_home }}/services/limesurvey/persistence/upload"
      # Mathesar
      - "{{ server_home }}/services/pkms/mathesar/db-persistence"
      - "{{ server_home }}/services/pkms/mathesar/persistence"
      - "{{ server_home }}/services/pkms/mathesar/persistence/static"
      - "{{ server_home }}/services/pkms/mathesar/persistence/media"
      # Minecraft
      - "{{ server_home }}/services/minecraft/persistence"
      # Navidrome
      - "{{ server_home }}/services/media/storage/music/navidrome/persistence"
      - "{{ server_home }}/services/media/storage/music/navidrome/persistence/backup"
      - "{{ server_home }}/services/media/storage/music/navidrome/persistence/data"
      - "{{ server_home }}/services/media/storage/music/navidrome/persistence/music"
      # Nextcloud
      - "{{ server_home }}/services/media/storage/documents/nextcloud/db-persistence"
      - "{{ server_home }}/services/media/storage/documents/nextcloud/persistence"
      - "{{ server_home }}/services/media/storage/documents/nextcloud/web-persistence"
      # Ntfy
      - "{{ server_home }}/services/monitoring/ntfy/persistence"
      - "{{ server_home }}/services/monitoring/ntfy/persistence/cache"
      - "{{ server_home }}/services/monitoring/ntfy/persistence/etc"
      - "{{ server_home }}/services/monitoring/ntfy/persistence/log"
      # Obsidian LiveSync
      - "{{ server_home }}/services/pkms/obsidian/persistence"
      - "{{ server_home }}/services/pkms/obsidian/persistence/couchdb-data"
      - "{{ server_home }}/services/pkms/obsidian/persistence/couchdb-etc"
      # Ollama
      - "{{ server_home }}/services/ai/ollama/ollama"
      # Open WebUI
      - "{{ server_home }}/services/ai/open-webui/persistence"
      # Paperless
      - "{{ server_home }}/services/media/storage/documents/paperless/db-persistence"
      - "{{ server_home }}/services/media/storage/documents/paperless/persistence"
      - "{{ server_home }}/services/media/storage/documents/paperless/persistence/consume"
      - "{{ server_home }}/services/media/storage/documents/paperless/persistence/data"
      - "{{ server_home }}/services/media/storage/documents/paperless/persistence/export"
      - "{{ server_home }}/services/media/storage/documents/paperless/persistence/media"
      - "{{ server_home }}/services/media/storage/documents/paperless/redis-persistence"
      # Photoprism
      - "{{ server_home }}/services/media/storage/pictures/photoprism/db-persistence"
      - "{{ server_home }}/services/media/storage/pictures/photoprism/persistence"
      - "{{ server_home }}/services/media/storage/pictures/photoprism/persistence/pictures"
      - "{{ server_home }}/services/media/storage/pictures/photoprism/persistence/storage"
      # Pihole
      - "{{ server_home }}/services/dns/pihole/etc-pihole"
      - "{{ server_home }}/services/dns/pihole/etc-dnsmasqd"
      # Prometheus
      - "{{ server_home }}/services/monitoring/prometheus/prometheus-persistence"
      # RustDesk
      - "{{ server_home }}/services/remote/rustdesk/persistence"
      - "{{ server_home }}/services/remote/rustdesk/db-persistence"
      # Scrutiny
      - "{{ server_home }}/services/monitoring/scrutiny/persistence"
      - "{{ server_home }}/services/monitoring/scrutiny/persistence/config"
      - "{{ server_home }}/services/monitoring/scrutiny/persistence/influxdb"
      # Stirling PDF
      - "{{ server_home }}/services/pdf/stirling-pdf/persistence"
      - "{{ server_home }}/services/pdf/stirling-pdf/persistence/configs"
      - "{{ server_home }}/services/pdf/stirling-pdf/persistence/tessdata"
      # Unbound
      - "{{ server_home }}/services/dns/unbound/persistence"
      # Vaultwarden
      - "{{ server_home }}/services/management/passwords/vaultwarden/db-persistence"
      - "{{ server_home }}/services/management/passwords/vaultwarden/persistence"
      # Wallos
      - "{{ server_home }}/services/finances/wallos/persistence"
      - "{{ server_home }}/services/finances/wallos/persistence/db"
      - "{{ server_home }}/services/finances/wallos/persistence/logos"
      # Wazuh
      - "{{ server_home }}/services/security/wazuh/persistence"
      - "{{ server_home }}/services/security/wazuh/persistence/api_configuration"
      - "{{ server_home }}/services/security/wazuh/persistence/etc"
      - "{{ server_home }}/services/security/wazuh/persistence/logs"
      - "{{ server_home }}/services/security/wazuh/persistence/queue"
      - "{{ server_home }}/services/security/wazuh/persistence/var_multigroups"
      - "{{ server_home }}/services/security/wazuh/persistence/integrations"
      - "{{ server_home }}/services/security/wazuh/persistence/active_response"
      - "{{ server_home }}/services/security/wazuh/persistence/agentless"
      - "{{ server_home }}/services/security/wazuh/persistence/wodles"
      - "{{ server_home }}/services/security/wazuh/filebeat-persistence"
      - "{{ server_home }}/services/security/wazuh/filebeat-persistence/etc"
      - "{{ server_home }}/services/security/wazuh/filebeat-persistence/var"
      - "{{ server_home }}/services/security/wazuh/indexer-persistence"
      - "{{ server_home }}/services/security/wazuh/dashboard-persistence"
      - "{{ server_home }}/services/security/wazuh/dashboard-persistence/config"
      - "{{ server_home }}/services/security/wazuh/dashboard-persistence/custom"
      # Wireguard Easy
      - "{{ server_home }}/services/remote/wg-easy/persistence"
      # Wireguard
      - "{{ server_home }}/services/remote/wireguard/persistence"
      #Wishlist
      - "{{ server_home }}/services/wishlist/persistence"
      - "{{ server_home }}/services/wishlist/persistence/data"
      - "{{ server_home }}/services/wishlist/persistence/uploads"
  vars_files:
    - ../vars/main.yml

  tasks:
  - name: Initialize persistence directories and files
    tags: docker
    block:

    #--- Directories
    - name: Create persistence directories
      ignore_errors: true
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: docker
        group: docker
        mode: 0744
      loop: "{{ directories }}"

    #--- Files
    - name: Create traefik log files
      ansible.builtin.file:
        path: "{{ item }}"
        state: touch
        owner: docker
        group: docker
        mode: 0640
      loop:
        - "{{ server_home }}/services/traefik/persistence/access.log"
        - "{{ server_home }}/services/traefik/persistence/traefik.log"

    #--- Traefik - Testing
    - name: Traefik Testing - Copy Traefik configuration file
      when: local_domain
      ansible.builtin.copy:
        src: "{{ server_home }}/services/traefik/config_local/traefik.toml"
        dest: "{{ server_home }}/services/traefik/persistence/traefik.toml"
        owner: docker
        group: docker
        mode: 0640

    #--- Traefik - Production
    - name: Traefik Production
      when: not local_domain
      block:

      - name: Create traefik certificates file
        ansible.builtin.file:
          path: "{{ server_home }}/services/traefik/persistence/acme.json"
          state: touch
          owner: docker
          group: docker
          mode: 0600

      - name: Copy Traefik configuration file
        ansible.builtin.copy:
          src: "{{ server_home }}/services/traefik/config/traefik.toml"
          dest: "{{ server_home }}/services/traefik/persistence/traefik.toml"
          owner: docker
          group: docker
          mode: 0640

      - name: Add email to traefik.toml
        ansible.builtin.lineinfile:
          path: "{{ server_home }}/services/traefik/persistence/traefik.toml"
          state: present
          search_string: "email ="
          line: "  email = '{{ user_email }}'"

      - name: Create traefik users.txt file
        ansible.builtin.file:
          path: "{{ server_home }}/services/traefik/persistence/users.txt"
          state: touch
          owner: docker
          group: docker
          mode: 0640

      - name: Add a user to users.txt
        community.general.htpasswd:
          path: "{{ server_home }}/services/traefik/persistence/users.txt"
          name: "{{ traefik_user }}"
          password: "{{ traefik_password }}"
          hash_scheme: md5_crypt
          state: present

    #--- Production Services
    - name: Production - Uncomment labels and bind mounts in compose.yaml for all services
      when: not local_domain
      ansible.builtin.replace:
        path: "{{ item }}"
        regexp: '(^\s*)# -'
        replace: '\1-'
      loop:
        - "{{ server_home }}/services/ai/open-webui/compose.yaml"
        - "{{ server_home }}/services/dashboard/homarr/compose.yaml"
        - "{{ server_home }}/services/directus/compose.yaml"
        - "{{ server_home }}/services/dns/pihole/compose.yaml"
        - "{{ server_home }}/services/finances/actual/compose.yaml"
        - "{{ server_home }}/services/grafana/compose.yaml"
        - "{{ server_home }}/services/inventory/grocy/compose.yaml"
        - "{{ server_home }}/services/inventory/homebox/compose.yaml"
        - "{{ server_home }}/services/inventory/hortusfox/compose.yaml"
        - "{{ server_home }}/services/kopia/compose.yaml"
        - "{{ server_home }}/services/limesurvey/compose.yaml"
        - "{{ server_home }}/services/management/code/bytestash/compose.yaml"
        - "{{ server_home }}/services/management/code/gitlab/compose.yaml"
        - "{{ server_home }}/services/management/code/it-tools/compose.yaml"
        - "{{ server_home }}/services/management/passwords/vaultwarden/compose.yaml"
        - "{{ server_home }}/services/media/sharing/gokapi/compose.yaml"
        - "{{ server_home }}/services/media/storage/books/kavita/compose.yaml"
        - "{{ server_home }}/services/media/storage/documents/nextcloud/compose.yaml"
        - "{{ server_home }}/services/media/storage/documents/paperless/compose.yaml"
        - "{{ server_home }}/services/media/storage/pictures/immich/compose.yaml"
        - "{{ server_home }}/services/media/storage/pictures/photoprism/compose.yaml"
        - "{{ server_home }}/services/media/storage/music/navidrome/compose.yaml"
        - "{{ server_home }}/services/media/storage/videos/jellyfin/compose.yaml"
        - "{{ server_home }}/services/monitoring/detection/compose.yaml"
        - "{{ server_home }}/services/monitoring/jetlog/compose.yaml"
        - "{{ server_home }}/services/monitoring/ntfy/compose.yaml"
        - "{{ server_home }}/services/news/freshrss/compose.yaml"
        - "{{ server_home }}/services/pdf/docuseal/compose.yaml"
        - "{{ server_home }}/services/pdf/stirling-pdf/compose.yaml"
        - "{{ server_home }}/services/pkms/affine/compose.yaml"
        - "{{ server_home }}/services/pkms/obsidian/compose.yaml"
        - "{{ server_home }}/services/remote/guacamole/compose.yaml"
        - "{{ server_home }}/services/remote/rustdesk/compose.yaml"
        - "{{ server_home }}/services/remote/wg-easy/compose.yaml"
        - "{{ server_home }}/services/security/enclosed/compose.yaml"
        - "{{ server_home }}/services/security/wazuh/compose.yaml"
        - "{{ server_home }}/services/traefik/compose.yaml"
        - "{{ server_home }}/services/wishlist/compose.yaml"

    #--- Guacamole
    - name: Make initdb.sql script executable
      ansible.builtin.file:
        path: "{{ server_home }}/services/remote/guacamole/config/initdb.sql"
        state: file
        owner: docker
        group: docker
        mode: 0777

    #--- Ntfy
    - name: Copy Ntfy server configuration file
      ansible.builtin.copy:
        src: "{{ server_home }}/services/ntfy/config/server.yml"
        dest: "{{ server_home }}/services/ntfy/persistence/etc/server.yml"
        owner: docker
        group: docker
        mode: 0640

    #--- Pihole
    - name: Create Pihole log file
      ansible.builtin.file:
        path: "{{ server_home }}/services/pihole/pihole.log"
        state: touch
        owner: docker
        group: docker
        mode: 0640

    #--- Stirling PDF
    - name: Download French language pack for OCR feature
      ansible.builtin.get_url:
        url: https://github.com/tesseract-ocr/tessdata/blob/main/fra.traineddata
        dest: "{{ server_home }}/services/stirling-pdf/persistence/tessdata/fra.traineddata"
        mode: 0740

    #--- Unbound
    - name: Copy Unbound server configuration files
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ item.dst }}"
        owner: docker
        group: docker
        mode: 0640
      loop:
        - { src: "{{ server_home }}/services/dns/unbound/config/forward-records.conf", dst: "{{ server_home }}/services/dns/unbound/persistence/forward-records.conf" }
        - { src: "{{ server_home }}/services/dns/unbound/config/unbound.conf", dst: "{{ server_home }}/services/dns/unbound/persistence/unbound.conf" }
