services:
  db:
    container_name: adventurelog-db
    env_file: config/.env.db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${ADVENTURELOG_DB_USER}"]
      interval: 20s
      timeout: 15s
      retries: 3
      start_period: 60s
      start_interval: 5s
    hostname: adventurelog-postgres
    image: ${ADVENTURELOG_DB_IMAGE}
    logging:
      driver: json-file
      options:
        max-file: 2
        max-size: 5m
    networks:
      app-net:
        ipv4_address: ${ADVENTURELOG_DB_IP}
    restart: unless-stopped
    stop_grace_period: 30s
    volumes:
      - ./db-persistence:/var/lib/postgresql/data/

  web:
    container_name: adventurelog-frontend
    depends_on:
      - server
    dns:
      - 127.0.0.1
      - 45.90.28.96
      - 45.90.30.96
    env_file: config/.env
    hostname: adventurelog-frontend
    image: ${ADVENTURELOG_FRONTEND_IMAGE}
    labels:
      - "traefik.enable=true"
      # Routers
      - "traefik.http.routers.adventurelog-frontend.entrypoints=web,websecure"
      - "traefik.http.routers.adventurelog-frontend.rule=Host(`travel.${DOMAIN}`) && !(PathPrefix(`/media`) || PathPrefix(`/admin`) || PathPrefix(`/static`) || PathPrefix(`/accounts`))"
      - "traefik.http.routers.adventurelog-frontend.tls=true"
      # - "traefik.http.routers.adventurelog-frontend.tls.certresolver=letsencrypt"
      # - "traefik.http.routers.adventurelog-frontend.tls.domains[0].main=travel.${DOMAIN}"
      - "traefik.http.routers.adventurelog-frontend.service=adventurelog-frontend"
      # Services
      - "traefik.http.services.adventurelog-frontend.loadbalancer.server.port=3000"
    logging:
      driver: json-file
      options:
        max-file: 5
        max-size: 10m
    networks:
      app-net:
        ipv4_address: ${ADVENTURELOG_FRONTEND_INTERNAL_IP}
      traefik-net:
        ipv4_address: ${ADVENTURELOG_FRONTEND_IP}
    ports:
      - 3000
    restart: unless-stopped
    stop_grace_period: 30s

  server:
    container_name: adventurelog-backend
    depends_on:
      - db
    dns:
      - 127.0.0.1
      - 45.90.28.96
      - 45.90.30.96
    env_file: config/.env
    image: ${ADVENTURELOG_BACKEND_IMAGE}
    labels:
      - "traefik.enable=true"
      # Routers
      - "traefik.http.routers.adventurelog-backend.entrypoints=web,websecure"
      - "traefik.http.routers.adventurelog-backend.rule=Host(`travel.${DOMAIN}`) && (PathPrefix(`/media`) || PathPrefix(`/admin`) || PathPrefix(`/static`) || PathPrefix(`/accounts`))"
      - "traefik.http.routers.adventurelog-backend.tls=true"
      # - "traefik.http.routers.adventurelog-backend.tls.certresolver=letsencrypt"
      # - "traefik.http.routers.adventurelog-backend.tls.domains[0].main=travel.${DOMAIN}"
      - "traefik.http.routers.adventurelog-backend.service=adventurelog-backend"
      # Services
      - "traefik.http.services.adventurelog-backend.loadbalancer.server.port=8000"
    logging:
      driver: json-file
      options:
        max-file: 5
        max-size: 10m
    networks:
      app-net:
        ipv4_address: ${ADVENTURELOG_BACKEND_INTERNAL_IP}
      traefik-net:
        ipv4_address: ${ADVENTURELOG_BACKEND_IP}
    ports:
      - 8000
    restart: unless-stopped
    stop_grace_period: 30s
    volumes:
      - ./persistence:/code/media/

networks:
  app-net:
    name: adventurelog-internal
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${ADVENTURELOG_NET}
          gateway: ${ADVENTURELOG_GATEWAY}
  traefik-net:
    external: true
    name: traefik-net
